#!/bin/bash

set -x

# fail on any error
set -o errexit

cd /root

# in order to prevent accidental overwrites of /root contents, we cd into our own directory where we perform the provisioning

if [ ! -d provisioning ]; then
    mkdir provisioning
fi
cd provisioning

# make the bash prompt show the fqdn of the current host in order to prevent confusion of where commands are run
echo 'export PS1="${PS1/\\h/\\H}"' >> ~/.bashrc
echo 'export PS1="${PS1/\\h/\\H}" # yes two times since there are two "\h" to replace' >> ~/.bashrc

# not necessary here since it is done when provisioning newrelic below - activate if newrelic provisioning step is removed
#apt-get update

# install shell-scripts in /usr/local/bin

cp /vagrant/shell-scripts-to-include/*.sh /usr/local/bin/

# update dokku to a pinned down revision of master branch and docker that we have tested

rm -r /root/dokku/
cp -r /vagrant/vendor/dokku /root/dokku
cd /root/dokku/
DOCKER_VERSION=1.2.0 make install
service docker restart
sleep 3

# pin down version of buildstep (and make sure to use an up to date version that works despite quantal being eol)

rm -r /tmp/buildstep
cp -r /vagrant/vendor/buildstep /tmp/buildstep
cd /tmp/buildstep
sudo make build

# skip GUI install - install by script
if [ -f "/etc/nginx/conf.d/dokku-installer.conf" ]; then
    echo "<%= ENV['HOSTNAME'] %>" > /home/dokku/HOSTNAME
    echo "<%= ENV['VHOST'] %>" > /home/dokku/VHOST
    cat /root/.ssh/authorized_keys | head -n 1 | sshcommand acl-add dokku admin
    rm /etc/nginx/conf.d/dokku-installer.conf && /etc/init.d/nginx stop && /etc/init.d/nginx start
    rm /etc/init/dokku-installer.conf && stop dokku-installer
fi

# install dokku plugins

rm -r /var/lib/dokku/plugins/
cp -r /vagrant/vendor/dokku-plugins /var/lib/dokku/plugins

# update nginx.conf to support longer than 46 character hostnames (default value 64 which equals 46 chars)

sed -i 's/server_names_hash_bucket_size 64;/server_names_hash_bucket_size 128;/' /etc/nginx/nginx.conf
cat /etc/nginx/nginx.conf | grep server
/etc/init.d/nginx restart

# add a dokkurc file to easily turn on and off debug mode (https://github.com/progrium/dokku/wiki/Troubleshooting)

echo '#export DOKKU_TRACE=1' > /home/dokku/dokkurc

# newrelic

wget -O - http://download.newrelic.com/548C16BF.gpg | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.newrelic.com/debian/ newrelic non-free" > /etc/apt/sources.list.d/newrelic.list'
sudo apt-get update
apt-get install -y -q newrelic-sysmond
nrsysmond-config --set license_key=<%= ENV['NEW_RELIC_LICENSE_KEY'] %>
nrsysmond-config --set loglevel=warning
nrsysmond-config --set loglevel=warning
/etc/init.d/newrelic-sysmond start

# add extra swap to make dokku more stable in oom situations (https://github.com/dotcloud/docker/issues/1555)

if [ ! -f "/var/swap.1" ]; then
    sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=4096
    sudo /sbin/mkswap /var/swap.1
    sudo /sbin/swapon /var/swap.1
    echo '/var/swap.1 swap swap defaults 0 0' > /etc/fstab
fi

# install htop and mosh

apt-get install -y -q htop mosh

# papertrail for the dokku rsyslog and vhost proxy

export PAPERTRAIL_PORT=<%= ENV['PAPERTRAIL_PORT'] %>
apt-get install -y -q ruby1.9.1-dev build-essential
gem install remote_syslog
export HOSTNAME=`hostname`
echo "\$LocalHostName $HOSTNAME" > /etc/rsyslog.d/00-fixed-hostname.conf
echo "*.*          @logs.papertrailapp.com:$PAPERTRAIL_PORT" > /etc/rsyslog.d/999-papertrail.conf
service rsyslog restart
killall remote_syslog
remote_syslog -p $PAPERTRAIL_PORT --hostname $HOSTNAME -d logs.papertrailapp.com /var/log/nginx/access.log /var/log/nginx/error.log /var/log/newrelic/nrsysmond.log

# nsenter

if [ ! -f /usr/local/bin/nsenter ]; then
    cd /tmp
    curl https://www.kernel.org/pub/linux/utils/util-linux/v2.24/util-linux-2.24.tar.gz \
         | tar -zxf-
    cd util-linux-2.24
    ./configure --without-ncurses
    make nsenter
    cp nsenter /usr/local/bin/
fi

# install and start mailcatcher on the dokku instance

docker pull nisenabe/mailcatcher
set +o errexit
docker ps -a | grep 'nisenabe/mailcatcher' | awk '{ print $1 }' | xargs docker rm -f
set -o errexit
docker run -d -p 1080:1080 -p 1025:1025 nisenabe/mailcatcher mailcatcher -f --verbose --ip 0.0.0.0 --smtp-port 1025 --http-port 1080

# done

cd /root
